# name: Deploy Frontend
# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#       - run: docker build -t eliezerambion/react-test -f Dockerfile.dev .
#       - run: docker run -e CI=true eliezerambion/react-test npm test

name: Deploy Frontend
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - uses: actions/checkout@v3

      # Login to Docker Hub (uses your secrets)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          # Step 1: Create a Docker Hub Access Token
          # Log in to Docker Hub.
          # In the top-right corner, click your avatar → Account Settings.
          # In the left sidebar, go to Security.
          # Under Access Tokens, click New Access Token.
          # Give it a name (e.g., github-actions-ci).
          # Click Generate → copy the token right away (you won’t see it again).
          #
          # Step 2: Add Token to GitHub Repo
          # Go back to your GitHub repo → Settings → Secrets and variables → Actions.
          # Click New repository secret.
          # Name: DOCKER_USERNAME
          # Value: your Docker Hub username (e.g., develiamb) -> your docker username
          # Save.
          # Click New repository secret again.
          # Name: DOCKER_PASSWORD
          # Value: paste the access token you just generated
          # Save.
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build test image from Dockerfile.dev
      - name: Build test image
        run: docker build -t eliezerambion/react-test -f Dockerfile.dev .

      # Run tests in container
      - name: Run tests
        run: docker run -e CI=true eliezerambion/react-test npm test
